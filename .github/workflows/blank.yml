# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        env:
          AWS_EC2_METADATA_DISABLED: true
        run: |
          sudo curl -sSL -o /usr/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 &&\
          sudo chmod +x /usr/bin/argocd
          echo "y" | argocd login  ${{ secrets.ARGO_LINK }} --username ${{ secrets.ARGO_NAME }} --password ${{ secrets.ARGO_PASSWORD }} --grpc-web
          markets_match=(all nl fr)
          string=$(git log -1 --pretty=format:%B | cat)
          for i in "${markets_match[@]}"; do
            if [[ $string == *"-$i-"* ]]; then
              market=$i
              service=$(echo $string | sed "s/.*$i-//")
            fi
          done
          environment_match=(staging prod)
          for e in "${environment_match[@]}"; do
            if [[ $string == *"-$e-"* ]]; then
              environment=$e
            fi
            aws s3 cp values/ s3://gwp-helm/values/ --recursive
            if [ "$market" == "all" ]; then
                all_markets=(nl fr)
                for i in "${all_markets[@]}"; do
                  argocd app get "$environment"-"$i"-"$service" --hard-refresh
                done 
            else
                argocd app get "$environment"-"$market"-"$service" --hard-refresh
            fi
          done          
